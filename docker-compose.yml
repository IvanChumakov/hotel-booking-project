name: hotel-booking-system

networks:
  hotel-booking-network:
    driver: bridge

volumes:
  redpanda-0: null
  postgres_data:

services:
  redpanda-0:
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://redpanda-0:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://redpanda-0:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr redpanda-0:33145
      - --advertise-rpc-addr redpanda-0:33145
      - --mode dev-container
      - --smp 1
      - --default-log-level=info
    image: docker.redpanda.com/redpandadata/redpanda:v24.2.8
    container_name: redpanda-0
    volumes:
      - redpanda-0:/var/lib/redpanda/data
    networks:
      - hotel-booking-network
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644

  redpanda-console:
    container_name: redpanda-console
    image: docker.redpanda.com/redpandadata/console:v2.7.2
    networks:
      - hotel-booking-network
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda-0:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda-0:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda-0:9644"]
    ports:
      - "8000:8080"
    depends_on:
      - redpanda-0

  postgres:
    image: postgres:14.8-alpine3.18
    environment:
      POSTGRES_DB: "hotel-bookings"
      POSTGRES_USER: "username"
      POSTGRES_PASSWORD: "1234"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    networks:
      - hotel-booking-network
    ports:
      - "5432:5432"

#  hotel-service:
#    build:
#      context: .
#      dockerfile: ./cmd/HotelService/Dockerfile
#    volumes:
#      - .:/code
#    ports:
#      - "8082:8081"
#      - "50051:50051"
#    networks:
#      - hotel-booking-network
#    depends_on:
#      - postgres
#
  booking-service:
    build:
      context: .
      dockerfile: ./bookingservice/Dockerfile
    volumes:
      - .:/code
    ports:
      - "8080:8080"
    networks:
      - hotel-booking-network
    depends_on:
      - postgres


